정서홍수 모델 R 코드
# 필요한 패키지 로드
> library(ggplot2)
> 
> # 1단계: 부정정서가 반추에 미치는 영향 (사회적 지지 고려하지 않음)
> model_1 <- lm(Rumination ~ Negative_Affect, data = data)
> summary(model_1)

Call:
lm(formula = Rumination ~ Negative_Affect, data = data)

Residuals:
    Min      1Q  Median      3Q     Max 
-1.9073 -0.6835 -0.0875  0.5806  3.2904 

Coefficients:
                Estimate Std. Error t value Pr(>|t|)
(Intercept)     -0.10280    0.09755  -1.054    0.295
Negative_Affect -0.05247    0.10688  -0.491    0.625

Residual standard error: 0.9707 on 98 degrees of freedom
Multiple R-squared:  0.002453,	Adjusted R-squared:  -0.007726 
F-statistic: 0.241 on 1 and 98 DF,  p-value: 0.6246

> 
> # 2단계: 사회적 지지가 반추와 부정정서 간 관계를 조절하는 매개효과
> data$Rumination_Social_Support <- data$Rumination * data$Social_Support  # 상호작용 항목 생성
> model_2 <- lm(Rumination ~ Negative_Affect + Social_Support + Rumination_Social_Support, data = data)
> summary(model_2)

Call:
lm(formula = Rumination ~ Negative_Affect + Social_Support + 
    Rumination_Social_Support, data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.97366 -0.68596 -0.07586  0.55989  2.88359 

Coefficients:
                          Estimate Std. Error t value Pr(>|t|)
(Intercept)               -0.10783    0.09920  -1.087    0.280
Negative_Affect           -0.06046    0.10944  -0.552    0.582
Social_Support             0.03737    0.10541   0.355    0.724
Rumination_Social_Support  0.08427    0.10568   0.797    0.427

Residual standard error: 0.9773 on 96 degrees of freedom
Multiple R-squared:  0.009607,	Adjusted R-squared:  -0.02134 
F-statistic: 0.3104 on 3 and 96 DF,  p-value: 0.8178

> 
> # 3단계: 반추가 인터넷 중독에 미치는 영향
> model_3 <- lm(Internet_Addiction ~ Rumination, data = data)
> summary(model_3)

Call:
lm(formula = Internet_Addiction ~ Rumination, data = data)

Residuals:
    Min      1Q  Median      3Q     Max 
-2.4807 -0.7027  0.0482  0.7352  2.6202 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)
(Intercept) -0.03116    0.10496  -0.297    0.767
Rumination   0.04709    0.10841   0.434    0.665

Residual standard error: 1.043 on 98 degrees of freedom
Multiple R-squared:  0.001921,	Adjusted R-squared:  -0.008263 
F-statistic: 0.1887 on 1 and 98 DF,  p-value: 0.665

> 
> # 4단계: 인터넷 중독이 비자살적 자해에 미치는 영향
> model_4 <- lm(Non_Suicidal_Self_Injury ~ Internet_Addiction, data = data)
> summary(model_4)

Call:
lm(formula = Non_Suicidal_Self_Injury ~ Internet_Addiction, data = data)

Residuals:
     Min       1Q   Median       3Q      Max 
-2.75998 -0.50025  0.04907  0.62295  2.29115 

Coefficients:
                   Estimate Std. Error t value Pr(>|t|)
(Intercept)         0.10519    0.09948   1.057    0.293
Internet_Addiction -0.01834    0.09619  -0.191    0.849

Residual standard error: 0.9942 on 98 degrees of freedom
Multiple R-squared:  0.0003709,	Adjusted R-squared:  -0.009829 
F-statistic: 0.03637 on 1 and 98 DF,  p-value: 0.8492

> 
> # 2단계: 사회적 지지에 따른 반추와 부정정서 간 관계 시각화
> ggplot(data, aes(x = Negative_Affect, y = Rumination)) +
+     geom_point(aes(color = Social_Support), alpha = 0.5) +  # 데이터 점 추가
+     geom_smooth(method = "lm", se = FALSE, aes(color = Social_Support), linetype = "solid") +  # 회귀선 추가
+     labs(title = "Effect of Negative Affect on Rumination by Social Support",
+          x = "Negative Affect", y = "Rumination", color = "Social Support") +
+     theme_minimal()
`geom_smooth()` using formula = 'y ~ x'
경고메시지(들):
The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a
  factor? 
> 
> # 3단계: 사회적 지지에 따른 반추가 인터넷 중독에 미치는 영향 시각화
> ggplot(data, aes(x = Rumination, y = Internet_Addiction)) +
+     geom_point(aes(color = Social_Support), alpha = 0.5) +  # 데이터 점 추가
+     geom_smooth(method = "lm", se = FALSE, aes(color = Social_Support), linetype = "solid") +  # 회귀선 추가
+     labs(title = "Effect of Rumination on Internet Addiction by Social Support",
+          x = "Rumination", y = "Internet Addiction", color = "Social Support") +
+     theme_minimal()
`geom_smooth()` using formula = 'y ~ x'
경고메시지(들):
The following aesthetics were dropped during statistical transformation: colour.
ℹ This can happen when ggplot fails to infer the correct grouping structure in the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical variable into a
  factor? 
> ////////////////////////////////////////////////////////////////////////////////////
GABA/Glx 계산 순서를 알기 위한 임의의 R 코드
# 임의로 생성한 고불안군과 비불안군 GABA/Glx 비율 데이터
set.seed(123)  # 결과 재현을 위한 시드 설정

# 고불안군 (예시: 50명의 고불안군)
high_anxious <- rnorm(50, mean = 0.75, sd = 0.15)  # 평균 0.75, 표준편차 0.15

# 비불안군 (예시: 40명의 비불안군)
non_anxious <- rnorm(40, mean = 0.53, sd = 0.12)  # 평균 0.53, 표준편차 0.12

# Welch의 두 표본 t-테스트 수행 (var.equal = FALSE)
t_test_result <- t.test(high_anxious, non_anxious, var.equal = FALSE)

# 결과 출력
print(t_test_result)

Welch Two Sample t-test

data:  high_anxious and non_anxious
t = 8.472, df = 87.567, p-value = 5.172e-13
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 0.1655682 0.2670560
sample estimates:
mean of x mean of y 
0.7551605 0.5388484 
/////////////////////////////////////////////
Dorsolateral Prefrontal Cortex에서 고불안군과 비불안군 모두 Amygdalofugal projections-FPl는 neural congruency effect와 정적 상관을 보인다는 계산을 알기 위한 임의의 R 코드

1. 피어슨(선형관계)
# 예시 데이터 생성
# 변수 1: Amygdalofugal projections-FPl (예시 데이터)
set.seed(123)
amygdalofugal_FPl <- rnorm(90, mean=50, sd=10)

# 변수 2: Neural congruency effect (예시 데이터)
neural_congruency_effect <- rnorm(90, mean=0, sd=1)

# 상관 분석 (Pearson 상관 분석)
cor_test <- cor.test(amygdalofugal_FPl, neural_congruency_effect, method="pearson")

# 상관 분석 결과 출력
print(cor_test)

# 결과에서 상관계수와 p-value를 추출
correlation_coefficient <- cor_test$estimate
p_value <- cor_test$p.value

# 출력: 상관계수, p-value
cat("상관계수:", correlation_coefficient, "\n")
cat("p-value:", p_value, "\n")

# 해석: 상관분석을 바탕으로 회귀분석을 수행할 수 있음
/////
2. 스피어만(비선형, 서열관계. 이 경우에는 해당없음)
# Spearman 상관 분석
cor_test_spearman <- cor.test(amygdalofugal_FPl, neural_congruency_effect, method="spearman")

# Spearman 상관 분석 결과 출력
print(cor_test_spearman)

# 결과에서 상관계수와 p-value 추출
spearman_correlation_coefficient <- cor_test_spearman$estimate
spearman_p_value <- cor_test_spearman$p.value

# 출력: Spearman 상관계수, p-value
cat("Spearman 상관계수:", spearman_correlation_coefficient, "\n")
cat("p-value:", spearman_p_value, "\n")

